version: 2.1

jobs:

  build:
    docker:
      - image: cimg/node:14.15.0
    steps:
      - checkout
      - run: npm install
      - run: npm run build

   docker-build:

     docker:
       - image: node:14-alpine

     steps:
       - setup_remote_docker
       - run: |
           docker build -f Dockerfile -t node-app .
           docker push node-app:latest

#      - run:
#         name: Create lock file
#          command: sudo touch /var/lib/apt/lists/lock

      - run:
          name: Install nvm
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh

      - run:
          name: Load nvm
          command: . /root/.nvm/nvm.sh

      - run:
          name: Install Node.js
          command: nvm install node

      # Gives CircleCI user sudo permissions
      - run:
          name: Add sudo permissions
          command: |
            echo 'circleci ALL=NOPASSWD: /usr/bin/apt-get' >> /etc/sudoers

      - run:
          name: Install dependencies
          command: npm install

      - run:
          name: Build app
          command: nmp run build

#      - run:
#          name: Build Docker image
#          command: |
#            docker build -f Dockerfile -t node-app .
#            docker login -u semajkp4 -p JG!4727xd
#            docker push node-app:latest

#  deploy:
#    docker:
#      - image: cimg/base:stable
#    steps:
#      - checkout
#      - setup_remote_docker
#      - run:
#          name: Build Docker Image
#          command: |
#            docker build -f Dockerfile -t node-app .
#            docker login -u semajkp4 -p JG!4727xd
#            docker push node-app:latest

      - run:
          name: Deploy to DigitalOcean Kubernetes
          command: |
            echo "$KUBE_CONFIG" | base64 --decode > kubeconfig.yaml
            kubectl --kubeconfig kubeconfig.yaml apply -f deployment.yaml
            kubectl --kubeconfig kubeconfig.yaml apply -f service.yaml

workflows:
  
  build-and-deploy:
    jobs:
      - build
      - docker-build
      - deploy:
          requires:
            - build
            - docker-build
            - build
